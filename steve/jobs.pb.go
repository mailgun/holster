// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: jobs.proto

package steve

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *HealthCheckResp) Reset() {
	*x = HealthCheckResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResp) ProtoMessage() {}

func (x *HealthCheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResp.ProtoReflect.Descriptor instead.
func (*HealthCheckResp) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{0}
}

func (x *HealthCheckResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PaginationArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *PaginationArgs) Reset() {
	*x = PaginationArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationArgs) ProtoMessage() {}

func (x *PaginationArgs) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationArgs.ProtoReflect.Descriptor instead.
func (*PaginationArgs) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{1}
}

func (x *PaginationArgs) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PaginationArgs) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type JobHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *JobHeader) Reset() {
	*x = JobHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobHeader) ProtoMessage() {}

func (x *JobHeader) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobHeader.ProtoReflect.Descriptor instead.
func (*JobHeader) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{2}
}

func (x *JobHeader) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type GetJobsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If pagination omitted, return first 20 matches.
	Pagination *PaginationArgs `protobuf:"bytes,1,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	JobId      []string        `protobuf:"bytes,2,rep,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *GetJobsReq) Reset() {
	*x = GetJobsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobsReq) ProtoMessage() {}

func (x *GetJobsReq) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobsReq.ProtoReflect.Descriptor instead.
func (*GetJobsReq) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{3}
}

func (x *GetJobsReq) GetPagination() *PaginationArgs {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetJobsReq) GetJobId() []string {
	if x != nil {
		return x.JobId
	}
	return nil
}

type GetJobsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs []*JobHeader `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
}

func (x *GetJobsResp) Reset() {
	*x = GetJobsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJobsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobsResp) ProtoMessage() {}

func (x *GetJobsResp) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobsResp.ProtoReflect.Descriptor instead.
func (*GetJobsResp) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{4}
}

func (x *GetJobsResp) GetJobs() []*JobHeader {
	if x != nil {
		return x.Jobs
	}
	return nil
}

type RunningTaskHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job     *JobHeader             `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	TaskId  string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Started *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=started,proto3" json:"started,omitempty"`
}

func (x *RunningTaskHeader) Reset() {
	*x = RunningTaskHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunningTaskHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunningTaskHeader) ProtoMessage() {}

func (x *RunningTaskHeader) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunningTaskHeader.ProtoReflect.Descriptor instead.
func (*RunningTaskHeader) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{5}
}

func (x *RunningTaskHeader) GetJob() *JobHeader {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *RunningTaskHeader) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *RunningTaskHeader) GetStarted() *timestamppb.Timestamp {
	if x != nil {
		return x.Started
	}
	return nil
}

type StoppedTaskHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Job     *JobHeader             `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	TaskId  string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Started *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=started,proto3" json:"started,omitempty"`
	Stopped *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=stopped,proto3" json:"stopped,omitempty"`
	// Pass means task completed successfully.  Otherwise, error contains an explanation.
	Pass  bool   `protobuf:"varint,5,opt,name=pass,proto3" json:"pass,omitempty"`
	Error string `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *StoppedTaskHeader) Reset() {
	*x = StoppedTaskHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoppedTaskHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoppedTaskHeader) ProtoMessage() {}

func (x *StoppedTaskHeader) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoppedTaskHeader.ProtoReflect.Descriptor instead.
func (*StoppedTaskHeader) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{6}
}

func (x *StoppedTaskHeader) GetJob() *JobHeader {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *StoppedTaskHeader) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *StoppedTaskHeader) GetStarted() *timestamppb.Timestamp {
	if x != nil {
		return x.Started
	}
	return nil
}

func (x *StoppedTaskHeader) GetStopped() *timestamppb.Timestamp {
	if x != nil {
		return x.Stopped
	}
	return nil
}

func (x *StoppedTaskHeader) GetPass() bool {
	if x != nil {
		return x.Pass
	}
	return false
}

func (x *StoppedTaskHeader) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TaskFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter fields with repeated values are OR'd.
	// All non-empty fields are AND'd.
	JobIds  []string `protobuf:"bytes,1,rep,name=job_ids,json=jobIds,proto3" json:"job_ids,omitempty"`
	TaskIds []string `protobuf:"bytes,2,rep,name=task_ids,json=taskIds,proto3" json:"task_ids,omitempty"`
}

func (x *TaskFilter) Reset() {
	*x = TaskFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskFilter) ProtoMessage() {}

func (x *TaskFilter) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskFilter.ProtoReflect.Descriptor instead.
func (*TaskFilter) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{7}
}

func (x *TaskFilter) GetJobIds() []string {
	if x != nil {
		return x.JobIds
	}
	return nil
}

func (x *TaskFilter) GetTaskIds() []string {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

type StartTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *StartTaskReq) Reset() {
	*x = StartTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTaskReq) ProtoMessage() {}

func (x *StartTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTaskReq.ProtoReflect.Descriptor instead.
func (*StartTaskReq) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{8}
}

func (x *StartTaskReq) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type StartTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *StartTaskResp) Reset() {
	*x = StartTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTaskResp) ProtoMessage() {}

func (x *StartTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTaskResp.ProtoReflect.Descriptor instead.
func (*StartTaskResp) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{9}
}

func (x *StartTaskResp) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type StopTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskId string `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *StopTaskReq) Reset() {
	*x = StopTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTaskReq) ProtoMessage() {}

func (x *StopTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTaskReq.ProtoReflect.Descriptor instead.
func (*StopTaskReq) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{10}
}

func (x *StopTaskReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetRunningTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If pagination omitted, return first 20 matches.
	Pagination *PaginationArgs `protobuf:"bytes,1,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	Filter     *TaskFilter     `protobuf:"bytes,2,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
}

func (x *GetRunningTasksReq) Reset() {
	*x = GetRunningTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRunningTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRunningTasksReq) ProtoMessage() {}

func (x *GetRunningTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRunningTasksReq.ProtoReflect.Descriptor instead.
func (*GetRunningTasksReq) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{11}
}

func (x *GetRunningTasksReq) GetPagination() *PaginationArgs {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetRunningTasksReq) GetFilter() *TaskFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetRunningTasksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*RunningTaskHeader `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *GetRunningTasksResp) Reset() {
	*x = GetRunningTasksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRunningTasksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRunningTasksResp) ProtoMessage() {}

func (x *GetRunningTasksResp) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRunningTasksResp.ProtoReflect.Descriptor instead.
func (*GetRunningTasksResp) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{12}
}

func (x *GetRunningTasksResp) GetTasks() []*RunningTaskHeader {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type GetStoppedTasksReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If pagination omitted, return first 20 matches.
	Pagination *PaginationArgs `protobuf:"bytes,1,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	Filter     *TaskFilter     `protobuf:"bytes,2,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
}

func (x *GetStoppedTasksReq) Reset() {
	*x = GetStoppedTasksReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoppedTasksReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoppedTasksReq) ProtoMessage() {}

func (x *GetStoppedTasksReq) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoppedTasksReq.ProtoReflect.Descriptor instead.
func (*GetStoppedTasksReq) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{13}
}

func (x *GetStoppedTasksReq) GetPagination() *PaginationArgs {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetStoppedTasksReq) GetFilter() *TaskFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type GetStoppedTasksResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*StoppedTaskHeader `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *GetStoppedTasksResp) Reset() {
	*x = GetStoppedTasksResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoppedTasksResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoppedTasksResp) ProtoMessage() {}

func (x *GetStoppedTasksResp) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoppedTasksResp.ProtoReflect.Descriptor instead.
func (*GetStoppedTasksResp) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{14}
}

func (x *GetStoppedTasksResp) GetTasks() []*StoppedTaskHeader {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type GetTaskOutputReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Pagination in terms of lines of text.
	// If pagination omitted, return last 100 lines.
	Pagination *PaginationArgs `protobuf:"bytes,1,opt,name=pagination,proto3,oneof" json:"pagination,omitempty"`
	TaskId     string          `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetTaskOutputReq) Reset() {
	*x = GetTaskOutputReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskOutputReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskOutputReq) ProtoMessage() {}

func (x *GetTaskOutputReq) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskOutputReq.ProtoReflect.Descriptor instead.
func (*GetTaskOutputReq) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{15}
}

func (x *GetTaskOutputReq) GetPagination() *PaginationArgs {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetTaskOutputReq) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetTaskOutputResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output []string `protobuf:"bytes,1,rep,name=output,proto3" json:"output,omitempty"`
}

func (x *GetTaskOutputResp) Reset() {
	*x = GetTaskOutputResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobs_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskOutputResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskOutputResp) ProtoMessage() {}

func (x *GetTaskOutputResp) ProtoReflect() protoreflect.Message {
	mi := &file_jobs_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskOutputResp.ProtoReflect.Descriptor instead.
func (*GetTaskOutputResp) Descriptor() ([]byte, []int) {
	return file_jobs_proto_rawDescGZIP(), []int{16}
}

func (x *GetTaskOutputResp) GetOutput() []string {
	if x != nil {
		return x.Output
	}
	return nil
}

var File_jobs_proto protoreflect.FileDescriptor

var file_jobs_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x62,
	0x2e, 0x73, 0x74, 0x65, 0x76, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x0f, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x3e, 0x0a, 0x0e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x72, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x22, 0x22, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x15,
	0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x65,
	0x76, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67,
	0x73, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88,
	0x01, 0x01, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4a,
	0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x65, 0x76, 0x65,
	0x2e, 0x4a, 0x6f, 0x62, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73,
	0x22, 0x89, 0x01, 0x0a, 0x11, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x65, 0x76, 0x65, 0x2e, 0x4a,
	0x6f, 0x62, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x22, 0xe9, 0x01, 0x0a,
	0x11, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x25, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x65, 0x76, 0x65, 0x2e, 0x4a, 0x6f, 0x62, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x70,
	0x70, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x61,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x40, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x73, 0x22, 0x25, 0x0a, 0x0c, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x22, 0x28, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x0b, 0x53,
	0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x22, 0xa0, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x65, 0x76, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x73,
	0x74, 0x65, 0x76, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48,
	0x01, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x48, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a,
	0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x62, 0x2e, 0x73, 0x74, 0x65, 0x76, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x54,
	0x61, 0x73, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x22, 0xa0, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x73, 0x74, 0x65, 0x76, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x72, 0x67, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x65, 0x76,
	0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x48, 0x01, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x22, 0x48, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65,
	0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x05, 0x74, 0x61,
	0x73, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x73,
	0x74, 0x65, 0x76, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x79, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x65, 0x76, 0x65,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x48,
	0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x32, 0xca, 0x04, 0x0a, 0x06, 0x4a, 0x6f, 0x62, 0x73, 0x56, 0x31,
	0x12, 0x42, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x65,
	0x76, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x12,
	0x14, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x65, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f,
	0x62, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x65, 0x76, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3e,
	0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x16, 0x2e, 0x70, 0x62,
	0x2e, 0x73, 0x74, 0x65, 0x76, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x65, 0x76, 0x65, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b,
	0x0a, 0x08, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e,
	0x73, 0x74, 0x65, 0x76, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x1c,
	0x2e, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x65, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e,
	0x6e, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70,
	0x62, 0x2e, 0x73, 0x74, 0x65, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x75, 0x6e, 0x6e, 0x69,
	0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x65, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1d,
	0x2e, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x65, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x70, 0x70, 0x65, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x4a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x65, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70,
	0x62, 0x2e, 0x73, 0x74, 0x65, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x54, 0x61, 0x73, 0x6b, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x65, 0x76, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x73, 0x74, 0x65, 0x76, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x30, 0x01, 0x42, 0x28, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x61, 0x69, 0x6c, 0x67, 0x75, 0x6e, 0x2f, 0x68, 0x6f, 0x6c, 0x73, 0x74, 0x65, 0x72,
	0x2f, 0x76, 0x34, 0x2f, 0x73, 0x74, 0x65, 0x76, 0x65, 0x80, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jobs_proto_rawDescOnce sync.Once
	file_jobs_proto_rawDescData = file_jobs_proto_rawDesc
)

func file_jobs_proto_rawDescGZIP() []byte {
	file_jobs_proto_rawDescOnce.Do(func() {
		file_jobs_proto_rawDescData = protoimpl.X.CompressGZIP(file_jobs_proto_rawDescData)
	})
	return file_jobs_proto_rawDescData
}

var file_jobs_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_jobs_proto_goTypes = []interface{}{
	(*HealthCheckResp)(nil),       // 0: pb.steve.HealthCheckResp
	(*PaginationArgs)(nil),        // 1: pb.steve.PaginationArgs
	(*JobHeader)(nil),             // 2: pb.steve.JobHeader
	(*GetJobsReq)(nil),            // 3: pb.steve.GetJobsReq
	(*GetJobsResp)(nil),           // 4: pb.steve.GetJobsResp
	(*RunningTaskHeader)(nil),     // 5: pb.steve.RunningTaskHeader
	(*StoppedTaskHeader)(nil),     // 6: pb.steve.StoppedTaskHeader
	(*TaskFilter)(nil),            // 7: pb.steve.TaskFilter
	(*StartTaskReq)(nil),          // 8: pb.steve.StartTaskReq
	(*StartTaskResp)(nil),         // 9: pb.steve.StartTaskResp
	(*StopTaskReq)(nil),           // 10: pb.steve.StopTaskReq
	(*GetRunningTasksReq)(nil),    // 11: pb.steve.GetRunningTasksReq
	(*GetRunningTasksResp)(nil),   // 12: pb.steve.GetRunningTasksResp
	(*GetStoppedTasksReq)(nil),    // 13: pb.steve.GetStoppedTasksReq
	(*GetStoppedTasksResp)(nil),   // 14: pb.steve.GetStoppedTasksResp
	(*GetTaskOutputReq)(nil),      // 15: pb.steve.GetTaskOutputReq
	(*GetTaskOutputResp)(nil),     // 16: pb.steve.GetTaskOutputResp
	(*timestamppb.Timestamp)(nil), // 17: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 18: google.protobuf.Empty
}
var file_jobs_proto_depIdxs = []int32{
	1,  // 0: pb.steve.GetJobsReq.pagination:type_name -> pb.steve.PaginationArgs
	2,  // 1: pb.steve.GetJobsResp.jobs:type_name -> pb.steve.JobHeader
	2,  // 2: pb.steve.RunningTaskHeader.job:type_name -> pb.steve.JobHeader
	17, // 3: pb.steve.RunningTaskHeader.started:type_name -> google.protobuf.Timestamp
	2,  // 4: pb.steve.StoppedTaskHeader.job:type_name -> pb.steve.JobHeader
	17, // 5: pb.steve.StoppedTaskHeader.started:type_name -> google.protobuf.Timestamp
	17, // 6: pb.steve.StoppedTaskHeader.stopped:type_name -> google.protobuf.Timestamp
	1,  // 7: pb.steve.GetRunningTasksReq.pagination:type_name -> pb.steve.PaginationArgs
	7,  // 8: pb.steve.GetRunningTasksReq.filter:type_name -> pb.steve.TaskFilter
	5,  // 9: pb.steve.GetRunningTasksResp.tasks:type_name -> pb.steve.RunningTaskHeader
	1,  // 10: pb.steve.GetStoppedTasksReq.pagination:type_name -> pb.steve.PaginationArgs
	7,  // 11: pb.steve.GetStoppedTasksReq.filter:type_name -> pb.steve.TaskFilter
	6,  // 12: pb.steve.GetStoppedTasksResp.tasks:type_name -> pb.steve.StoppedTaskHeader
	1,  // 13: pb.steve.GetTaskOutputReq.pagination:type_name -> pb.steve.PaginationArgs
	18, // 14: pb.steve.JobsV1.HealthCheck:input_type -> google.protobuf.Empty
	3,  // 15: pb.steve.JobsV1.GetJobs:input_type -> pb.steve.GetJobsReq
	8,  // 16: pb.steve.JobsV1.StartTask:input_type -> pb.steve.StartTaskReq
	10, // 17: pb.steve.JobsV1.StopTask:input_type -> pb.steve.StopTaskReq
	11, // 18: pb.steve.JobsV1.GetRunningTasks:input_type -> pb.steve.GetRunningTasksReq
	13, // 19: pb.steve.JobsV1.GetStoppedTasks:input_type -> pb.steve.GetStoppedTasksReq
	15, // 20: pb.steve.JobsV1.GetTaskOutput:input_type -> pb.steve.GetTaskOutputReq
	15, // 21: pb.steve.JobsV1.GetStreamingTaskOutput:input_type -> pb.steve.GetTaskOutputReq
	0,  // 22: pb.steve.JobsV1.HealthCheck:output_type -> pb.steve.HealthCheckResp
	4,  // 23: pb.steve.JobsV1.GetJobs:output_type -> pb.steve.GetJobsResp
	9,  // 24: pb.steve.JobsV1.StartTask:output_type -> pb.steve.StartTaskResp
	18, // 25: pb.steve.JobsV1.StopTask:output_type -> google.protobuf.Empty
	12, // 26: pb.steve.JobsV1.GetRunningTasks:output_type -> pb.steve.GetRunningTasksResp
	14, // 27: pb.steve.JobsV1.GetStoppedTasks:output_type -> pb.steve.GetStoppedTasksResp
	16, // 28: pb.steve.JobsV1.GetTaskOutput:output_type -> pb.steve.GetTaskOutputResp
	16, // 29: pb.steve.JobsV1.GetStreamingTaskOutput:output_type -> pb.steve.GetTaskOutputResp
	22, // [22:30] is the sub-list for method output_type
	14, // [14:22] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_jobs_proto_init() }
func file_jobs_proto_init() {
	if File_jobs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jobs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJobsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunningTaskHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoppedTaskHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRunningTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRunningTasksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoppedTasksReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoppedTasksResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskOutputReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobs_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskOutputResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_jobs_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_jobs_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_jobs_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_jobs_proto_msgTypes[15].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jobs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jobs_proto_goTypes,
		DependencyIndexes: file_jobs_proto_depIdxs,
		MessageInfos:      file_jobs_proto_msgTypes,
	}.Build()
	File_jobs_proto = out.File
	file_jobs_proto_rawDesc = nil
	file_jobs_proto_goTypes = nil
	file_jobs_proto_depIdxs = nil
}
